{"ast":null,"code":"import _objectSpread from \"/Users/mitchgilbert/Flatiron/code/phase-4/module-4-practice-woof-woof/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/mitchgilbert/Flatiron/code/phase-4/module-4-practice-woof-woof/src/components/dis-doggo.js\";\nimport React from 'react';\n\nclass DisDoggo extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      dog: {\n        id: this.props.selectedDoggo.id,\n        image: this.props.selectedDoggo.image,\n        isGoodDog: this.props.selectedDoggo.isGoodDog,\n        name: this.props.selectedDoggo.name\n      }\n    };\n\n    this.handleClick = () => {\n      this.setState(prevState => ({\n        dog: _objectSpread({}, prevState.dog, {\n          isGoodDog: !this.state.dog.isGoodDog\n        })\n      }));\n      this.patchDog();\n    };\n\n    this.patchDog = () => {\n      let configObj = {\n        method: 'PATCH',\n        header: {\n          'content-type': 'application/json'\n        },\n        body: JSON.stringify(this.state.dog)\n      };\n      fetch(\"http://localhost:3000/pups/\".concat(this.state.id), configObj).then(resp => resp.json()).then(data => data);\n    };\n  }\n\n  render() {\n    console.log(this.state);\n    return React.createElement(\"div\", {\n      id: \"dog-info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: this.props.selectedDoggo.image,\n      alt: \"cutie\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, this.props.selectedDoggo.name), React.createElement(\"button\", {\n      onClick: this.handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, this.state.goodDog ? 'Good Doggo' : 'Bad Boi'));\n  }\n\n}\n\nexport default DisDoggo;","map":{"version":3,"sources":["/Users/mitchgilbert/Flatiron/code/phase-4/module-4-practice-woof-woof/src/components/dis-doggo.js"],"names":["React","DisDoggo","Component","state","dog","id","props","selectedDoggo","image","isGoodDog","name","handleClick","setState","prevState","patchDog","configObj","method","header","body","JSON","stringify","fetch","then","resp","json","data","render","console","log","goodDog"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,QAAN,SAAuBD,KAAK,CAACE,SAA7B,CAAuC;AAAA;AAAA;AAAA,SAEnCC,KAFmC,GAE3B;AACJC,MAAAA,GAAG,EAAE;AACDC,QAAAA,EAAE,EAAE,KAAKC,KAAL,CAAWC,aAAX,CAAyBF,EAD5B;AAEDG,QAAAA,KAAK,EAAE,KAAKF,KAAL,CAAWC,aAAX,CAAyBC,KAF/B;AAGDC,QAAAA,SAAS,EAAE,KAAKH,KAAL,CAAWC,aAAX,CAAyBE,SAHnC;AAIDC,QAAAA,IAAI,EAAE,KAAKJ,KAAL,CAAWC,aAAX,CAAyBG;AAJ9B;AADD,KAF2B;;AAAA,SAWnCC,WAXmC,GAWrB,MAAM;AAChB,WAAKC,QAAL,CAAcC,SAAS,KAAK;AACxBT,QAAAA,GAAG,oBACIS,SAAS,CAACT,GADd;AAECK,UAAAA,SAAS,EAAE,CAAC,KAAKN,KAAL,CAAWC,GAAX,CAAeK;AAF5B;AADqB,OAAL,CAAvB;AAMA,WAAKK,QAAL;AACH,KAnBkC;;AAAA,SAqBnCA,QArBmC,GAqBxB,MAAM;AACb,UAAIC,SAAS,GAAG;AACZC,QAAAA,MAAM,EAAE,OADI;AAEZC,QAAAA,MAAM,EAAE;AACJ,0BAAe;AADX,SAFI;AAKZC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe,KAAKjB,KAAL,CAAWC,GAA1B;AALM,OAAhB;AAQAiB,MAAAA,KAAK,sCAA+B,KAAKlB,KAAL,CAAWE,EAA1C,GAAgDU,SAAhD,CAAL,CACCO,IADD,CACMC,IAAI,IAAIA,IAAI,CAACC,IAAL,EADd,EAECF,IAFD,CAEMG,IAAI,IAAIA,IAFd;AAGH,KAjCkC;AAAA;;AAqCnCC,EAAAA,MAAM,GAAG;AACLC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKzB,KAAjB;AACJ,WACI;AAAK,MAAA,EAAE,EAAC,UAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,GAAG,EAAE,KAAKG,KAAL,CAAWC,aAAX,CAAyBC,KAAnC;AAA0C,MAAA,GAAG,EAAC,OAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAKF,KAAL,CAAWC,aAAX,CAAyBG,IAA9B,CAFJ,EAGI;AAAQ,MAAA,OAAO,EAAE,KAAKC,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAoC,KAAKR,KAAL,CAAW0B,OAAX,GAAqB,YAArB,GAAoC,SAAxE,CAHJ,CADJ;AAOC;;AA9CkC;;AAiDvC,eAAe5B,QAAf","sourcesContent":["import React from 'react'\n\nclass DisDoggo extends React.Component {\n\n    state = {\n        dog: {\n            id: this.props.selectedDoggo.id,\n            image: this.props.selectedDoggo.image,\n            isGoodDog: this.props.selectedDoggo.isGoodDog,\n            name: this.props.selectedDoggo.name\n        }\n    }\n\n    handleClick = () => {\n        this.setState(prevState => ({\n            dog: { \n                ...prevState.dog,\n                isGoodDog: !this.state.dog.isGoodDog\n            }\n        }))\n        this.patchDog()\n    }\n\n    patchDog = () => {\n        let configObj = {\n            method: 'PATCH',\n            header: {\n                'content-type':'application/json'\n            },\n            body: JSON.stringify(this.state.dog)\n        }\n\n        fetch(`http://localhost:3000/pups/${this.state.id}`, configObj)\n        .then(resp => resp.json())\n        .then(data => data)\n    }\n    \n    \n\n    render() {\n        console.log(this.state)\n    return (\n        <div id=\"dog-info\">\n            <img src={this.props.selectedDoggo.image} alt='cutie' />\n            <h2>{this.props.selectedDoggo.name}</h2>\n            <button onClick={this.handleClick}>{this.state.goodDog ? 'Good Doggo' : 'Bad Boi'}</button>\n        </div>\n    )\n    }\n}\n\nexport default DisDoggo"]},"metadata":{},"sourceType":"module"}