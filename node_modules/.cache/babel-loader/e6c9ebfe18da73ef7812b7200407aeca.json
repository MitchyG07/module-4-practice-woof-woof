{"ast":null,"code":"var _jsxFileName = \"/Users/mitchgilbert/Flatiron/code/phase-4/module-4-practice-woof-woof/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport DogContainer from './containers/dog-container.js';\nimport DisDoggo from './components/dis-doggo.js';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      dogs: [],\n      selectedDog: {},\n      filterGoodBois: []\n    };\n\n    this.handleClick = dog => {\n      this.setState({\n        selectedDog: dog\n      });\n    };\n\n    this.updateDog = dog => {\n      let goodDog = !dog.isGoodDog;\n      let configObj = {\n        method: 'PATCH',\n        header: {\n          'content-type': 'application/json'\n        },\n        body: JSON.stringify({\n          isGoodDog: goodDog\n        })\n      };\n      fetch(\"http://localhost:3000/pups/\".concat(dog.id), configObj).then(res => res.json()).then(dog => {\n        this.patchDogInArray(dog);\n      });\n    };\n\n    this.patchDogInArray = dog => {\n      this.setState(prevState => {\n        let arrayDog = prevState.dogs.find(d => d.id === dog.id);\n        arrayDog.isGoodDog = !arrayDog.isGoodDog;\n        Object.assign(dog, arrayDog);\n        return {\n          dogs: prevState.dogs\n        };\n      });\n    };\n  }\n\n  componentDidMount() {\n    fetch('http://localhost:3000/pups').then(resp => resp.json()).then(dogs => this.setState({\n      dogs\n    }));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"filter-div\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      id: \"good-dog-filter\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"Filter good dogs: OFF\")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(DogContainer, {\n      dogs: this.state.dogs,\n      handleClick: this.handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      id: \"dog-summary-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"DOGGO:\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, this.state.selectedDog.name ? React.createElement(DisDoggo, {\n      selectedDoggo: this.state.selectedDog,\n      updateDog: this.updateDog,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }) : null)));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/mitchgilbert/Flatiron/code/phase-4/module-4-practice-woof-woof/src/App.js"],"names":["React","DogContainer","DisDoggo","App","Component","state","dogs","selectedDog","filterGoodBois","handleClick","dog","setState","updateDog","goodDog","isGoodDog","configObj","method","header","body","JSON","stringify","fetch","id","then","res","json","patchDogInArray","prevState","arrayDog","find","d","Object","assign","componentDidMount","resp","render","name"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\nimport DogContainer from './containers/dog-container.js'\nimport DisDoggo from './components/dis-doggo.js'\n\nclass App extends React.Component{\n\n  state = {\n    dogs: [],\n    selectedDog: {},\n    filterGoodBois: []\n  }\n\n  componentDidMount() {\n    fetch('http://localhost:3000/pups')\n    .then(resp => resp.json())\n    .then(dogs => this.setState({dogs}))\n  }\n\n  handleClick = (dog) => {\n    this.setState({\n      selectedDog: dog\n    })\n  }\n\n  updateDog = (dog) => {\n    let goodDog = !dog.isGoodDog\n    let configObj = ({\n      method: 'PATCH',\n      header: {\n        'content-type':'application/json'\n      },\n      body: JSON.stringify({isGoodDog: goodDog})\n    }) \n      fetch(`http://localhost:3000/pups/${dog.id}`, configObj)\n      .then(res => res.json())\n      .then(dog => {\n        this.patchDogInArray(dog)\n      })\n  }\n    \n\n  patchDogInArray = (dog) => {\n    this.setState( prevState => {\n      let arrayDog = prevState.dogs.find(d => d.id === dog.id)\n      arrayDog.isGoodDog = !arrayDog.isGoodDog\n      Object.assign(dog,arrayDog)\n      return {\n        dogs: prevState.dogs\n      }\n    })\n  }\n\n  render(){\n  return (\n    <div className=\"App\">\n      <div id=\"filter-div\">\n        <button id=\"good-dog-filter\">Filter good dogs: OFF</button>\n      </div>\n      <div>\n      <DogContainer dogs={this.state.dogs} handleClick={this.handleClick}/>\n      </div>\n      <div id=\"dog-summary-container\">\n        <h1>DOGGO:</h1>\n        <div>\n        {this.state.selectedDog.name ? <DisDoggo selectedDoggo={this.state.selectedDog} updateDog={this.updateDog}/> : null }\n        </div>\n      </div>\n    </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}